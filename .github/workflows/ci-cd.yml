name: üß™ CI / üê≥ CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: 3.11

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with: python-version: ${{ env.PYTHON_VERSION }}
      - name: Install deps
        run: pip install flake8 black
      - name: Black check
        run: black --check .
      - name: Flake8
        run: flake8 .

  type_check:
    name: Type Checking
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: python-version: ${{ env.PYTHON_VERSION }}
      - run: pip install mypy
      - run: mypy .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint, type_check]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: python-version: ${{ env.PYTHON_VERSION }}
      - run: pip install -r requirements.txt pytest pytest-asyncio pytest-cov
      - run: pytest --cov=.

  build_and_push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push today-api
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: your-dockerhub-username/today-api:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - uses: wei/render-deploy@v1
        with:
          apiKey: ${{ secrets.RENDER_API_KEY }}
          serviceId: ${{ secrets.RENDER_WEB_SERVICE_ID }}
